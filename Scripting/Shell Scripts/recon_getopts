#!/bin/bash
#Recon script

# A function library
#source ./scan.lib


PATH_TO_DIRSEARCH="/home/safety/tools/dirsearch/"

#using functions to avoid repetition
nmap_scan(){
    nmap $DOMAIN >$DIRECTORY/nmap
        echo "The results of nmap scan are stored in $DIRECTORY/nmap."
}

dirserach_scan(){
    $PATH_TO_DIRSEARCH/dirsearch.py -u $DOMAIN -e php, js --simple-report --exclude-status 403=$DIRECTORY/dirsearch
    echo "The results of the dirsearch scan is stored in $DIRECTORY/dirsearch."
}

crt_scan(){
    curl "https://crt.sh/?q=$DOMAIN&output==json" -o $DIRECTORY/crt
        echo " The results of crt scan are stored in $DIRECTORY/crt." 
}

#USING GETOPTS FOR OPTIONAL COMMANDLINE ARGUMENT
getopts "m:" OPTION
MODE=$OPTARG

for i in "${@:$OPTIND:$#}"
do
#using case statement in place of multiple if/else statements
	echo "Please enter a domain"
	read $DOMAIN
	DOMAIN=$i
	DIRECTORY=${DOMAIN}_recon
	echo "Creating directory $DIRECTORY."
	mkdir $DIRECTORY

	case $2 in
   		 nmap_only)
       			 nmap_scan
        		;;
   		 dirsearch-only)
       			 dirserach_scan
       			;;
   		 crt-only)
       			 crt_scan
		        ;;
   		 *)
      			 nmap_scan

      			 dirserach_scan

       			 crt_scan
				;;
	esac
	echo "Generating recon report from output files..."
	TODAY=$(date)
	echo "This scan was created on $TODAY > $DIRECTORY/report
		if [ -f $DIRECTORY/nmap ];then

			echo "Results for Nmap:" >> $DIRECTORY/report
			grep -E "^\s*\S+\s+\S+\s+\S+\s*$" $DIRECTORY/nmap >> $DIRECTORY/report
		fi

		if [ -f $DIRECTORY/dirsearch ];then
			echo "Results for Dirsearch:" >> $DIRCTORY/report
			cat $DIRECTORY/dirsearch >> $DIRECTORY/report
		fi

		if [ -f $DIRECTORY/crt ];then
			echo "Results for crt.sh:" >> $DIRECTORY/report
			jq -r ".[] | .name_value" >> DIRECTORY/crt >> $DIRECTORY/report
		fi
done

#Using while-llop to take user input
while [ $INPUT = "quit" ];do
	echo "Pleaseenter a domain!"
	read INPUT
	if [ $INPUT != "quit" ];then
		scan_domain $INPUT
		report_domain $INPUT
	fi
done

#Using getopts repeatedly
while getopts "m:i" OPTION; do
	case $OPTION in
	m)
		MODE=$OPTARG
		;;
	i)
		INTERACTIVE=true
		;;
	esac
done




